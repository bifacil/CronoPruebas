<?xml version="1.0" encoding="utf-8"?>
 <rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
 <channel>
   <title>Datawarehouse f&#225;cil</title>
   <atom:link href="https://datawarehouse.es/rss.xml" rel="self" type="application/rss+xml" />
   <link>https://datawarehouse.es</link>
   <description></description>

 <item>
      <guid isPermaLink="true">https://datawarehouse.es/2011/esto es una prueba3</guid>
      <link>https://datawarehouse.es/2011/esto es una prueba3</link>
      <title>esto es una prueba3</title>
      <pubDate>Tue, 29 Nov 2016 11:16:53 GMT</pubDate>
      <atom:updated>2016-11-29T11:16:53Z</atom:updated>
      <description>
	  &lt;div style=&quot;width:700px&quot;&gt;&lt;img class=&quot;w100p&quot; src=&quot;https://datawarehouse.es/blog/images/&quot; /&gt;
	  &lt;p&gt;asfasfasf&lt;/p&gt;
	   
	  
	  &lt;/div&gt;</description>
</item>
 <item>
      <guid isPermaLink="true">https://datawarehouse.es/2011/recomendaciones-testing-datawarehouse.html</guid>
      <link>https://datawarehouse.es/2011/recomendaciones-testing-datawarehouse.html</link>
      <title>Esto es una prueba</title>
      <pubDate>Tue, 29 Nov 2016 10:39:28 GMT</pubDate>
      <atom:updated>2016-11-29T10:39:28Z</atom:updated>
      <description>
	  &lt;div style=&quot;width:700px&quot;&gt;&lt;img class=&quot;w100p&quot; src=&quot;https://datawarehouse.es/blog/images/&quot; /&gt;
	  &lt;p&gt;Esto es una prueba&lt;/p&gt;
	   
	  
	  &lt;/div&gt;</description>
</item>
 <item>
      <guid isPermaLink="true">https://datawarehouse.es/2009/seis-claves-para-elegir-arquitectura-etl.html</guid>
      <link>https://datawarehouse.es/2009/seis-claves-para-elegir-arquitectura-etl.html</link>
      <title>Seis claves para elegir la arquitectura ETL</title>
      <pubDate>Thu, 03 Nov 2016 00:00:00 GMT</pubDate>
      <atom:updated>2016-11-03T00:00:00Z</atom:updated>
      <description>
	  &lt;div style=&quot;width:700px&quot;&gt;&lt;img class=&quot;w100p&quot; src=&quot;https://datawarehouse.es/blog/images/&quot; /&gt;
	  &lt;p&gt;Este art&#237;culo describe seis decisiones clave que deben incluirse durante la elaboraci&#243;n de la arquitectura ETL para un DWH dimensional. Estas decisiones tienen un impacto importante en el coste inicial y coste corriente y en la complejidad de la soluci&#243;n ETL y, finalmente, en el &#233;xito de toda la soluci&#243;n BI/DW en global.&lt;/p&gt;
&lt;h2&gt;1. &#191;Debemos utilizar una herramienta ETL?&lt;/h2&gt;
&lt;p&gt;Una de las primeras y m&#225;s fundamentales decisiones que debes tomar es si codificar tu proceso ETL a mano desde cero, o si debes utilizar un software espec&#237;fico de un proveedor. Dejando de lado  las cuestiones t&#233;cnicas y los costes de licencia, no debes adoptar un m&#233;todo que a tus empleados y directores no les sea familiar sin considerar seriamente las implicaciones a largo plazo de estas decisiones. Esta decisi&#243;n tendr&#225; un mayor impacto en el contexto del ETL, guiando decisiones respecto al personal, dise&#241;ando enfoques, estrategias de metadatos, y implementando cronolog&#237;as a largo plazo.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;En el contexto actual, la mayor&#237;a de organizaciones deben usar un software suministrado por un proveedor.&lt;/strong&gt; Sin embargo, esta decisi&#243;n debe tomarse en base a los recursos disponibles para construir y dirigir el sistema. Las herramientas ETL construyen entornos que usan iconos, flechas y propiedades en lugar de escribir c&#243;digo para construir la soluci&#243;n ETL. Ten cuidado: Si tu equipo de desarrollo del ETL est&#225; integrado por cierto n&#250;mero de programadores de la vieja escuela, es posible que no se adapten bien a una herramienta ETL. S&#243;lo por esta raz&#243;n, algunas organizaciones piensan que un ETL personalizado es una soluci&#243;n razonable.&lt;/p&gt;
&lt;p&gt;Si decides utilizar una herramienta ETL, no esperes una gran amortizaci&#243;n en tu primera iteraci&#243;n. Las ventajas aparecer&#225;n a medida que realices iteraciones adicionales y empieces a aprovechar las ventajas de utilizar la herramienta en las siguientes implementaciones. Tambi&#233;n experimentar&#225;s los beneficios en la capacidad de mantenimiento, documentaci&#243;n m&#225;s completa y soporte mejorado para los metadatos.&lt;/p&gt;
&lt;h2&gt;2. &#191;D&#243;nde y c&#243;mo debe tener lugar la integraci&#243;n de datos?&lt;/h2&gt;
&lt;p&gt;La integraci&#243;n de datos es un tema important&#237;simo para IT porque, b&#225;sicamente, se trata de hacer que todos los sistemas trabajen juntos eficientemente. La &amp;quot;visi&#243;n de 360 de la empresa&amp;quot; es un objetivo com&#250;nmente discutido que realmente implica la integraci&#243;n de datos. En muchos casos, la integraci&#243;n de datos debe realizarse en los sistemas de transacciones primarios de la organizaci&#243;n antes de que los datos lleguen al data warehouse. Sin embargo, antes que enfrentarse a la integraci&#243;n en el entorno operacional, estos requisitos son normalmente encargados al DWH y al sistema ETL.&lt;/p&gt;
&lt;p&gt;La mayor&#237;a de nosotros entendemos el concepto principal de que la integraci&#243;n permite que bases de datos dispares funcionen juntas de una manera &#250;til. Todos sabemos que lo necesitamos, simplemente no tenemos una idea clara de c&#243;mo dividirlo en partes manejables.&lt;/p&gt;
&lt;p&gt;&#191;Integraci&#243;n significa que todas las partes de grandes organizaciones est&#233;n de acuerdo con cada dato o s&#243;lo con alguno de ellos? Este es el punto crucial de la decisi&#243;n que se debe tomar. &#191;En qu&#233; datos la direcci&#243;n empresarial est&#225; de acuerdo/insiste que suceda? &#191;Est&#225;n dispuestos a establecer definiciones comunes entre la organizaci&#243;n y atenerse a esas definiciones?&lt;/p&gt;
&lt;p&gt;Fundamentalmente, integraci&#243;n significa llegar a un acuerdo en el sentido de los datos desde la perspectiva de dos o m&#225;s bases de datos. Con la integraci&#243;n, los resultados de dos bases de datos pueden ser combinados en un solo an&#225;lisis del DWH. Sin un acuerdo, las bases de datos permanecer&#225;n aisladas y no se podr&#225;n enlazar en una aplicaci&#243;n. En el contexto de nuestro entorno ETL, la integraci&#243;n de datos toma la forma de las dimensiones acordadas y de los hechos establecidos en el almac&#233;n de datos. Las dimensiones acordadas hacen referencia a establecer atributos dimensionales comunes entre tablas de hechos separadas de forma que informes puedan ser generados utilizando estos atributos. Los hechos establecidos hacen referencia a acuerdos en m&#233;tricas comunes de negocios como los indicadores de actividad (KPIs) entre bases de datos separadas, para que estos n&#250;meros puedas ser comparados matem&#225;ticamente para calcular diferencias y ratios.&lt;/p&gt;
&lt;h2&gt;3. &#191;Qu&#233; mecanismo de recopilaci&#243;n de cambios de datos debemos escoger?&lt;/h2&gt;
&lt;p&gt;Durante la carga inicial del hist&#243;rico de datos del almac&#233;n de datos, recopilar cambios contenidos en las fuentes de datos no es importante ya que est&#225;s cargando datos en un punto futuro. Sin embargo, la mayor&#237;a de tablas del almac&#233;n de datos son tan extensas que no pueden ser actualizadas durante cada ciclo ETL. Debes tener la capacidad de transferir s&#243;lo los cambios relevantes para la fuente de datos  desde la &#250;ltima actualizaci&#243;n. Aislar la &#250;ltima fuente de datos se denomina recopilaci&#243;n de cambio de datos (&lt;em&gt;change data capture&lt;/em&gt;, CDC). &lt;strong&gt;La idea detr&#225;s de recopilar el cambio de datos es bastante simple: transferir solamente los datos que han sido cambiados desde la &#250;ltima actualizaci&#243;n.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Pero construir un buen sistema de recopilaci&#243;n de cambio de datos no es tan f&#225;cil como suena. Asumamos  que el mecanismo seleccionado debe ser totalmente fiable y a prueba de fallos. Todos los datos cambiados deben ser identificados. Encontrar la estrategia m&#225;s completa puede ser evasivo, muchas veces la actualizaci&#243;n de los sistemas de tablas de la fuente puede ocurrir fuera de la misma aplicaci&#243;n. Un error aqu&#237;, provocar&#225; resultados que no podr&#225;n ser explicados f&#225;cilmente; frecuentemente esto deriva en la recuperaci&#243;n de datos para identificar el culpable.&lt;/p&gt;
&lt;p&gt;Los problemas pueden significar elevados costes en t&#233;rminos de rehacer el trabajo-sin mencionar la situaci&#243;n embarazosa. En resumen, &lt;strong&gt;recopilar los cambios de datos est&#225; lejos de ser una tarea trivial, y debes entender muy bien los sistemas de fuente de datos.&lt;/strong&gt; Este conocimiento ayudar&#225; al equipo ETL a evaluar las fuentes de datos, identificar problemas en  la recopilaci&#243;n de los cambios de datos y determinar la estrategia m&#225;s apropiada.&lt;/p&gt;
&lt;h2&gt;4. &#191;Cuando debemos almacenar los datos?&lt;/h2&gt;
&lt;p&gt;En el entorno actual de almacenamiento de datos, es bastante posible para las herramientas ETL establecer una conexi&#243;n directa con la fuente de la base de datos, extraer los datos, aplicar cualquier transformaci&#243;n requerida en la memoria y, finalmente, escribirla- s&#243;lo una vez- en la tabla objetivo del DWH. Desde el punto de vista de rendimiento, esta es una gran capacidad ya que el coste de escritura es elevado. Minimizar el n&#250;mero de escrituras en un buen objetivo de dise&#241;o.&lt;/p&gt;
&lt;p&gt;Sin embargo, a pesar de las ventajas de rendimiento, este puede no ser el mejor planteamiento. Hay diversas razones por las que una organizaci&#243;n puede decidir para almacenar los datos f&#237;sicamente  (por ejemplo, escribirlos en un disco) durante el proceso ETL:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;El m&#233;todo CDC m&#225;s apropiado requiere comparar la copia actual de la tabla fuente con la copia precedente de la misma tabla.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;La organizaci&#243;n ha elegido almacenar los datos inmediatamente despu&#233;s de la extracci&#243;n con el prop&#243;sito de archivar (posiblemente para cumplir los requerimientos de auditoria y control).&lt;/li&gt;
&lt;li&gt;A veces se requiere un punto de recuperaci&#243;n/reinicio cuando el ETL falla a mitad del trabajo.&lt;/li&gt;
&lt;li&gt;Los procesos ETL que se desarrollan durante largos per&#237;odos pueden abrir una conexi&#243;n con el sistema fuente que crea problemas con bloqueos de la base de datos y sobrecarga el sistema de transacciones.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;5. &#191;D&#243;nde debemos corregir los datos?&lt;/h2&gt;
&lt;p&gt;Los usuarios de negocios son conscientes de que la calidad de los datos es un problema serio y caro. Por este motivo, a la mayor&#237;a de organizaciones les gusta apoyar iniciativas para mejorar la calidad de los datos. Pero la mayor&#237;a de los usuarios probablemente no tienen ni idea de d&#243;nde se originan los problemas de calidad de los datos o que se debe hacer para mejorar la calidad de los datos. Deben pensar que la calidad de los datos es un simple problema de ejecuci&#243;n del equipo ETL. En este entorno, el equipo ETL necesita ser &#225;gil y proactivo:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;La calidad de los datos no puede ser mejorada solamente por el ETL.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;La clave est&#225; en que el equipo de ETL colabore con la empresa y los equipos de soporte del sistema fuente del IT.&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;La decisi&#243;n clave es d&#243;nde corregir los datos. Claramente, la mejor soluci&#243;n es recopilar correctamente los datos en el momento que se generan. Por supuesto, este no es siempre el caso, pero &lt;strong&gt;en la mayor&#237;a de casos los datos deben ser corregidos en sistema fuente.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Sin embargo, desafortunadamente, es inevitable que datos de poca calidad lleguen al sistema ETL. En este caso, hay tres opciones:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Detener el proceso de carga.&lt;/li&gt;
&lt;li&gt;Enviar los registros da&#241;ados a un archivo temporal para su posterior procesamiento.&lt;/li&gt;
&lt;li&gt;&#218;nicamente etiquetar los datos y continuar&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;La tercera opci&#243;n es por mucho la mejor (siempre que sea posible). Detener el proceso es obviamente doloroso porque requiere intervenci&#243;n manual para diagnosticar el problema, reiniciar o reanudar el trabajo, o abortar completamente. Enviar registros a un archivo temporal siempre es una soluci&#243;n pobre porque no est&#225; claro cu&#225;ndo estos registros ser&#225;n revisados e introducidos en el DWH. Hasta que los registros son restaurados al flujo de datos, la integridad global de la base de datos es cuestionable ya que estos registros est&#225;n perdidos. Recomiendo no utilizar el archivo temporal para infracciones menores de datos.&lt;/p&gt;
&lt;p&gt;La tercera opci&#243;n de etiquetar los datos con la condici&#243;n de error normalmente funciona bien. La tabla de hechos err&#243;nea puede ser etiquetada con una dimensi&#243;n de control que describe la condici&#243;n de calidad global de la fila del hecho problem&#225;tico. Los datos mal dimensionados tambi&#233;n pueden ser etiquetados con un valores &#250;nicos de error en el mismo campo. En este punto, las soluciones de &lt;em&gt;data quality&lt;/em&gt; pueden ayudar aidentificar el hecho problem&#225;tico y las filas de dimensi&#243;n.&lt;/p&gt;
&lt;h2&gt;6. &#191;Con que rapidez debe estar disponible la informaci&#243;n de origen en el sistema DW/BI?&lt;/h2&gt;
&lt;p&gt;La latencia de  los datos  describe con qu&#233; frecuencia los datos fuente deben ser proporcionados a los usuarios de negocio v&#237;a el sistema DW/BI. La latencia de los datos obviamente tiene un gran efecto en el coste y la complejidad de tu entorno ETL. Algoritmos de procesamiento inteligentes, paralelizaci&#243;n,  y hardware potente pueden acelerar el flujo de carga (tradicionalmente orientado por lotes). Pero en alg&#250;n momento, si el requerimiento de la latencia de datos es suficientemente urgente, el proceso ETL debe pasar de estar orientado a lotes a estar orientado a flujos. Este cambio no es gradual ni evolutivo. Es un cambio de paradigma que puede implicar la re-implementaci&#243;n completa del sistema ETL.&lt;/p&gt;
&lt;p&gt;Habitualmente, el proceso ETL requiere una latencia de datos acorde al ritmo natural del negocio. &lt;strong&gt;En la mayor&#237;a de organizaciones esto se traduce en actualizaciones diarias para la mayor&#237;a de procesos  ETL y actualizaciones semanales o mensuales para otros procesos ETL.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Sin embargo, en algunas circunstancias, el ritmo del negocio requiere actualizaciones m&#225;s frecuentes o incluso actualizaciones en tiempo real. La clave es reconocer que s&#243;lo un pu&#241;ado de procesos empresariales dentro de una organizaci&#243;n son apropiados para realizar actualizaciones en tiempo real. &lt;strong&gt;No hay ninguna raz&#243;n de peso para convertir todo el proceso ETL a tiempo real.&lt;/strong&gt; El ritmo de la mayor&#237;a de procesos empresariales simplemente no demandan un tratamiento en tiempo real.&lt;/p&gt;
&lt;p&gt;Hay que tener cuidado: Preguntar a los usuarios de negocio si quieren la entrega de datos en tiempo real es una invitaci&#243;n abierta para los problemas. Por supuesto, la mayor&#237;a de usuarios de negocios responder&#225;n positivamente a tener los datos actualizados m&#225;s frecuentemente, independientemente de si entienden el impacto de su petici&#243;n. Claramente este tipo de requerimiento de latencia de datos puede ser peligroso. Recomendamos dividir la dificultad del tiempo real en tres categor&#237;as: diaria, frecuente e instant&#225;nea. Necesitas que los usuarios finales describan sus requerimientos en cuanto a latencia de datos en estos t&#233;rminos y despu&#233;s dise&#241;ar tu soluci&#243;n ETL apropiadamente para respaldar cada set de requerimientos:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;&amp;quot;Inst&#225;ntaneo&amp;quot;&lt;/strong&gt; significa que los datos visibles en la pantalla del usuario final representan el estado real del sistema de fuente de transacci&#243;n en cada instante. Cuando el estado del sistema de la fuente cambia, la pantalla debe tambi&#233;n responder instant&#225;neamente.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;quot;Frecuentemente&amp;quot;&lt;/strong&gt; significa que los datos visibles por el usuario final, se actualizan muchas veces al d&#237;a pero no se garantiza que representen el  valor correcto absoluto en cada instante.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;quot;Diariamente&amp;quot;&lt;/strong&gt; significa que los datos visibles en la pantalla corresponden a la informaci&#243;n del sistema fuente al final del d&#237;a anterior laborable.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;En este art&#237;culo hemos discutido unas cuentas claves que deben ser evaluadas durante la creaci&#243;n de la arquitectura ETL para mantener DWH dimensional.&lt;/p&gt;
&lt;p&gt;Pocas veces hay una sola elecci&#243;n correcta para cualquiera de estas decisiones. Como siempre, la decisi&#243;n correcta depender&#225; de las necesidades y caracter&#237;sticas de tu empresa.&lt;/p&gt;
&lt;p&gt;Art&#237;culo original: &lt;a href=&quot;http://www.kimballgroup.com/2009/10/six-key-decisions-for-etl-architectures/&quot;&gt;http://www.kimballgroup.com/2009/10/six-key-decisions-for-etl-architectures/&lt;/a&gt;&lt;/p&gt;
	   
	  
	  &lt;/div&gt;</description>
</item>
 <item>
      <guid isPermaLink="true">https://datawarehouse.es/2011/recomendaciones-testing-datawarehouse.html</guid>
      <link>https://datawarehouse.es/2011/recomendaciones-testing-datawarehouse.html</link>
      <title>Consejo de die&#241;o #134: Recomendaciones para las pruebas del Data Warehouse</title>
      <pubDate>Thu, 03 Nov 2016 00:00:00 GMT</pubDate>
      <atom:updated>2016-11-03T00:00:00Z</atom:updated>
      <description>
	  &lt;div style=&quot;width:700px&quot;&gt;&lt;img class=&quot;w100p&quot; src=&quot;https://datawarehouse.es/blog/images/&quot; /&gt;
	  &lt;p&gt;La validaci&#243;n de un entorno datawarehouse/BI es un gran reto. La metodolog&#237;a de validaci&#243;n est&#225;ndar valida s&#243;lo una peque&#241;a cosa a la vez. Sin embargo, la naturaleza de un sistema DW/BI versa sobre integraciones complejas, sin mencionar el elevado volumen de datos. Aqu&#237; est&#225;n mis 5 recomendaciones principales para construir y ejecutar un test en el entorno de tu proyecto DW/BI.&lt;/p&gt;
&lt;h2&gt;1. Crea un peque&#241;o test est&#225;tico de la base de datos, derivado de los datos reales.&lt;/h2&gt;
&lt;p&gt;Necesitas que sea peque&#241;o para que el test se realice r&#225;pidamente. Necesitas que sea est&#225;tico para conocer de antemano los resultados esperados. Y necesitas que derive de datos reales porque no hay nada como los datos reales para ofrecer una combinaci&#243;n realista de escenarios buenos y malos. Necesitar&#225;s a&#241;adir filas en el test de la base de datos para probar que cada una de las instrucciones de tu c&#243;digo ETL cubre un escenario no incluido en el test de datos original.&lt;/p&gt;
&lt;h2&gt;2. Comprueba pronto y con regularidad.&lt;/h2&gt;
&lt;p&gt;Empieza comprobando tan pronto como escribas una l&#237;nea de c&#243;digo (o conectas dos cajas en el UI de tu herramienta ETL). Los desarrolladores hacen esto todo el tiempo, por supuesto. Desarrollar implica poner en marcha tests unitarios para asegurar que su c&#243;digo funciona como se espera. Muchos desarrolladores no son tan buenos siguiendo la evoluci&#243;n de esas pruebas y realiz&#225;ndolas frecuentemente. Diariamente. Cada vez que se realiza un commit en tu c&#243;digo. Si realizas el test cada d&#237;a, y priorizas en mejorar cada test que fall&#243; ayer, ser&#225; m&#225;s f&#225;cil determinar aquello que no funcion&#243;.&lt;/p&gt;
&lt;p&gt;La prueba unitaria asegura que el c&#243;digo desarrollado funciona tal y como se ha dise&#241;ado. La prueba del sistema asegura que el sistema en completo funciona, de acuerdo con las especificaciones. La prueba del sistema tambi&#233;n se deber&#237;a realizar pronto.&lt;/p&gt;
&lt;p&gt;Hay una &amp;quot;fase de test&amp;quot; oficial antes de la puesta en funcionamiento del DWH. Esta fase de tests es para llevar a cabo las pruebas y reconocer problemas, no para identificar como deber&#237;an ser los tests y como llevarlos a cabo. &lt;strong&gt;Se debe  empezar a probar el sistema al inicio del proceso de desarrollo&lt;/strong&gt;, de esta manera todos los detalles se resuelven mucho antes de empezar con la &amp;quot;fase de test&amp;quot; oficial, que supone mayor presi&#243;n para el funcionamiento correcto del sistema.&lt;/p&gt;
&lt;h2&gt;3. Utilizar herramientas de prueba y automatizar el entorno de prueba.&lt;/h2&gt;
&lt;p&gt;La recomendaci&#243;n de hacer el test pronto y regularmente es pr&#225;ctica solamente si automatizas el proceso. Ning&#250;n desarrollador va a utilizar hasta la &#250;ltima de su d&#237;a de trabajo haciendo de ni&#241;era de la prueba unitaria. Y pocos equipos pueden permitirse un controlador a tiempo completo para hacer ese trabajo en lugar del desarrollador. Para automatizar la prueba, necesitas herramientas. Muchas organizaciones ya disponen “in situ” de herramientas para comprobar la calidad de las pruebas. Si tu no las tienes, o est&#225;s convencido de que las herramientas de las que dispones no responden a las necesidades de control del sistema DW/BI, intenta buscar en google “herramientas de software para asegurar la calidad” para disponer de una inmensa lista de productos y metodolog&#237;as disponibles a una extensa gama de precios.&lt;/p&gt;
&lt;p&gt;Todos los software comerciales de herramientas de prueba te permitir&#225;n formular tests, ejecutar tests, registrar los resultados de los tests realizados y informar de esos resultados. Para la prueba de la unidad y prueba de la calidad de los datos, define los tests para llevar a cabo una consulta en la fuente y el objetivo del almac&#233;n de datos. &lt;strong&gt;Tienes que buscar el recuento de filas y cantidades para hacerlas coincidir.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Una herramienta de testing utilizada para probar el DW/BI debe ser capaz de ejecutar un escenario que establezca el entorno de prueba antes de que las pruebas se lleven a cabo. Las tareas que necesitar&#225; ejecutar incluyen:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Restaurar un entorno de m&#225;quina virtual con un test de datos limpio.&lt;/li&gt;
&lt;li&gt;Modificar el test est&#225;tico de datos con filas especiales para probar condiciones inusuales.&lt;/li&gt;
&lt;li&gt;Ejecutar tu programa ETL&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Despu&#233;s de ejecutar y registrar los tests, termina con un &lt;em&gt;script&lt;/em&gt; de limpieza, que deber&#237;a ser tan simple como eliminar el entorno VM.&lt;/p&gt;
&lt;p&gt;La metodolog&#237;a de prueba est&#225;ndar cambia una cosa, ejecuta un test y registra los resultados. En el mundo del DW/BI, debes agrupar juntos muchos tests en un grupo de tests. Incluso con una base de datos peque&#241;a, no tienes que ejecutar tu c&#243;digo ETL para cada una de los centenares de unidades que deber&#237;an estar funcionando.&lt;/p&gt;
&lt;h2&gt;4. Haz una lista de los usuarios de negocios para definir los tests del sistema.&lt;/h2&gt;
&lt;p&gt;Necesitamos la experiencia de los usuarios para definir buenos tests para el sistema. &#191;C&#243;mo sabemos que los datos son correctos? &#191;C&#243;mo sabemos que el rendimiento de las consultas cumple sus expectativas? Hacer una lista de los usuarios de negocios durante el proceso de especifiaci&#243;n del test asegurar&#225; una mejor prueba que si simplemente el equipo DW/BI construye tests basados en lo que creen que es interesante. Contar con los usuarios de negocios clave en el proceso de aseguramiento de la calidad tambi&#233;n proporciona un impulso enorme en la credibilidad.&lt;/p&gt;
&lt;h2&gt;5. El test del entorno debe ser tan similar como sea posible al entorno de producci&#243;n.&lt;/h2&gt;
&lt;p&gt;Es de vital importancia que el entorno de test sea similar al de producci&#243;n. Ser&#237;a ideal que fuese el mismo hardware, software y configuraci&#243;n. En el mundo real, relativamente pocas organizaciones tienen presupuesto para tener dos servidores DW grandes. Pero cualquier organizaci&#243;n puede, y debe, hacer coincidir los siguientes elementos:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Configuraci&#243;n de la unidad (nombres relativos de las unidades). El disco es barato y debes ser capaz de duplicar tu disco para su test. Pero si no puedes, al menos haz que los escritos de la unidad y el archivo de la base de datos tengan la misma disposici&#243;n. Mucha gente se queja de que esto significa mucho trabajo para cambiar el entorno . &#161;Lo es! Y es mucho mejor hacerlo ahora que en la fase final del test de tu proyecto.&lt;/li&gt;
&lt;li&gt;Las versiones de software del sistema operativo de la base de datos con la base de datos de los escritorios de los usuarios, y todo aquello que los relacione.&lt;/li&gt;
&lt;li&gt;Dise&#241;o del servidor. Si el software de reporting est&#225; en su propio servidor de producci&#243;n, pru&#233;balo de esa manera.&lt;/li&gt;
&lt;li&gt;Roles de seguridad y privilegios para las cuentas de mantenimiento. Tu despliegue est&#225; virtualmente relegado al fracaso si no compruebas los roles de seguridad primero. No s&#233; porque, pero siempre parece que va a ir mal.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Si sigues estas sugerencias, especialmente la sugerencia de probar continuamente, probablemente tengas una fase de test agradable y sin crisis y cumplir&#225;s el hito de pase a producci&#243;n en  la fecha programada.&lt;/strong&gt;  Si no, est&#225;s corriendo un serio riesgo de retrasar interminablemente un fabuloso proyecto en el infierno QA, con los usuarios de negocios y la direcci&#243;n llamando a tu puerta.&lt;/p&gt;
&lt;p&gt;Art&#237;culo original: &lt;a href=&quot;http://www.kimballgroup.com/2011/05/design-tip-134-data-warehouse-testing-recommendations/&quot;&gt;http://www.kimballgroup.com/2011/05/design-tip-134-data-warehouse-testing-recommendations/&lt;/a&gt;&lt;/p&gt;
	   
	  
	  &lt;/div&gt;</description>
</item>


   
</channel>
</rss>
